# Import Account class from Accounts.py
from Accounts import Account

# Define the create_savings_account function
def create_savings_account(balance, apr, months):
    savings_account = Account(balance, apr)
    interest_earned = savings_account.calculate_interest(months)
    new_balance = savings_account.get_balance() + interest_earned
    savings_account.set_balance(new_balance)
    return new_balance, interest_earned

# Define the create_cd_account function
def create_cd_account(balance, apr, months):
    cd_account = Account(balance, apr)
    interest_earned = cd_account.calculate_interest(months)
    new_balance = cd_account.get_balance() + interest_earned
    cd_account.set_balance(new_balance)
    return new_balance, interest_earned

# Define the menu function
def menu():
    print("Welcome to the First United Bank of Python")
    print("1. Create a Savings Account")
    print("2. Create a CD Account")
    print("3. Exit")
    choice = input("Enter your choice: ")
    return int(choice)

# Define the main function
def main():
    while True:
        user_choice = menu()

        if user_choice == 1:
            balance = float(input("Enter starting balance: "))
            apr = float(input("Enter annual interest rate (in %): "))
            months = int(input("Enter number of months: "))
            new_balance, interest_earned = create_savings_account(balance, apr, months)
            print(f"Interest Earned: {interest_earned:.2f}")
            print(f"New Balance: {new_balance:.2f}")

        elif user_choice == 2:
            balance = float(input("Enter starting balance: "))
            apr = float(input("Enter annual interest rate (in %): "))
            months = int(input("Enter number of months: "))
            new_balance, interest_earned = create_cd_account(balance, apr, months)
            print(f"Interest Earned: {interest_earned:.2f}")
            print(f"New Balance: {new_balance:.2f}")

        elif user_choice == 3:
            print("Thank you for using the First United Bank of Python.")
            break

# Ensure the main function call is correctly aligned
if __name__ == "__main__":
    main()
